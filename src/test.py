# import torch
# a = torch.tensor([[2.4700e+02, 2.0000e+00, 4.5900e+02, 3.5800e+02, 0.0000e+00, 4.5000e+01,
#          7.7900e+02, 3.0000e+00, 1.4740e+03, 1.9000e+01],
#         [4.2400e+02, 2.0000e+00, 0.0000e+00, 1.2000e+02, 1.4000e+02, 1.0000e+00,
#          1.9000e+01, 0.0000e+00, 5.5000e+01, 1.0980e+03],
#         [0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
#          2.8100e+02, 1.0000e+00, 2.7600e+02, 3.3500e+02],
#         [2.2400e+02, 2.3000e+01, 4.1000e+01, 4.5000e+01, 7.6700e+02, 0.0000e+00,
#          1.0000e+00, 6.1000e+01, 1.0000e+00, 0.0000e+00],
#         [0.0000e+00, 9.0200e+02, 6.0000e+00, 2.2000e+01, 2.0000e+00, 7.0000e+00,
#          5.7900e+02, 7.2000e+01, 0.0000e+00, 1.5000e+01],
#         [6.0000e+00, 5.3000e+01, 1.4000e+01, 1.0900e+02, 1.0100e+02, 2.0110e+03,
#          3.4800e+02, 1.7400e+03, 0.0000e+00, 2.0000e+00],
#         [1.0100e+02, 3.7900e+02, 0.0000e+00, 0.0000e+00, 2.0000e+00, 2.0000e+00,
#          3.6000e+01, 2.6000e+01, 4.5000e+01, 1.5000e+01],
#         [1.5000e+01, 1.0000e+01, 1.8930e+03, 1.6000e+01, 0.0000e+00, 0.0000e+00,
#          0.0000e+00, 1.1910e+03, 3.7000e+01, 6.5400e+02],
#         [4.7000e+01, 3.0900e+02, 3.0000e+00, 9.0000e+00, 7.7000e+01, 0.0000e+00,
#          2.5600e+02, 2.6000e+01, 2.7900e+02, 0.0000e+00],
#         [3.5500e+02, 1.5730e+03, 6.6100e+02, 4.0000e+00, 0.0000e+00, 1.5800e+02,
#          1.0800e+02, 4.0000e+00, 6.2000e+01, 5.3100e+02],
#         [2.0480e+03, 0.0000e+00, 4.7000e+01, 1.5500e+02, 1.5710e+03, 2.1000e+01,
#          2.0200e+02, 1.6000e+01, 0.0000e+00, 0.0000e+00],
#         [2.5300e+02, 1.0000e+00, 0.0000e+00, 1.5470e+03, 8.3700e+02, 6.3000e+01,
#          1.0700e+02, 4.0100e+02, 0.0000e+00, 5.8700e+02],
#         [2.0000e+01, 1.0700e+02, 4.7000e+01, 2.5000e+01, 1.8000e+01, 0.0000e+00,
#          0.0000e+00, 0.0000e+00, 1.0000e+01, 0.0000e+00],
#         [0.0000e+00, 0.0000e+00, 8.0000e+00, 4.9000e+01, 0.0000e+00, 2.0000e+00,
#          1.0000e+00, 0.0000e+00, 6.0200e+02, 0.0000e+00],
#         [2.0500e+02, 3.7300e+02, 0.0000e+00, 1.3300e+02, 2.9800e+02, 2.8000e+01,
#          9.3100e+02, 1.0000e+00, 1.0000e+00, 2.3800e+02],
#         [4.0000e+00, 4.1000e+01, 6.0600e+02, 3.9000e+01, 0.0000e+00, 1.4000e+01,
#          0.0000e+00, 1.0000e+00, 3.0000e+00, 2.3700e+02],
#         [2.0000e+01, 0.0000e+00, 3.8000e+01, 3.0000e+00, 6.2000e+01, 0.0000e+00,
#          4.0000e+00, 0.0000e+00, 0.0000e+00, 1.9700e+02],
#         [0.0000e+00, 0.0000e+00, 1.6300e+02, 1.0000e+00, 6.2000e+01, 0.0000e+00,
#          9.8000e+01, 5.2000e+01, 1.6000e+01, 1.0000e+00],
#         [1.0000e+00, 0.0000e+00, 0.0000e+00, 9.9000e+01, 6.0000e+00, 0.0000e+00,
#          2.4700e+02, 4.0200e+02, 1.7500e+02, 2.2000e+01],
#         [1.6000e+01, 2.1800e+02, 0.0000e+00, 1.2570e+03, 7.5000e+01, 1.6520e+03,
#          1.0000e+00, 4.0000e+00, 9.5800e+02, 7.1000e+01]])
# original_distribution = a.to(torch.int)
# keep = original_distribution - torch.floor(original_distribution * 0.2).to(torch.int)
# sent = (original_distribution - keep).sum(dim=0)
# # print(original_distribution,original_distribution.sum())
# # print(keep)
# # print(sent.sum())
# print(keep.shape,sent.shape)
# print(torch.cat([keep,sent.unsqueeze(0)],dim=0))
def han(a):
    def inner():
        b = a
        return b
    return inner
print(han(3)())